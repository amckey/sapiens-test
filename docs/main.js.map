{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"toolbar\" role=\"banner\">\n\n  <ng-container *ngFor=\"let item of headerItems\">\n    <div class=\"toolbar-logo\" *ngIf=\"item.logo\">\n      <a>\n        <h1 (click)=\"simulateAction(item)\">{{item.name}}</h1>\n      </a>\n    </div>\n  </ng-container>\n\n  <ng-container *ngFor=\"let item of headerItems\">\n    <a class=\"toolbar-section\" *ngIf=\"item.section\">\n      <h4 (click)=\"simulateAction(item)\">{{item.name}}</h4>\n    </a>\n  </ng-container>\n\n  <ng-container *ngFor=\"let item of headerItems\">\n    <div class=\"toolbar-button\" *ngIf=\"item.button\">\n      <a>\n        <h3 (click)=\"simulateAction(item)\">{{item.name}}</h3>\n      </a>\n    </div>\n  </ng-container>\n\n</div>\n\n\n","import { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { Text } from '@angular/compiler/src/render3/r3_ast';\nimport { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  headerItems = [\n    {\n      logo: true,\n      name: 'MyLogo'\n    },\n    {\n      section: true,\n      name: 'About us'\n    },\n    {\n      section: true,\n      name: 'Our cover'\n    },\n    {\n      section: true,\n      name: 'Contact us'\n    },\n    {\n      section: true,\n      name: 'Help us'\n    },\n    {\n      button: true,\n      name: 'Back to your policies'\n    },\n  ]\n\n  simulateAction(title: any): void {\n    console.log(`\"${title.name}\" has been pressed`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}